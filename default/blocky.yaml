---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: blocky
  namespace: default
spec:
  chart:
    repository: https://k8s-at-home.com/charts/
    name: blocky
    version: 7.1.0

  values:
    image:
      repository: ghcr.io/0xerr0r/blocky
      tag: v0.14
      pullPolicy: IfNotPresent

    env:
      TZ: "America/Chicago"

    service:
      main:
        ports:
          http:
            port: 4000
      dns-tcp:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: ""
        ports:
          dns-tcp:
            enabled: true
            port: 53
            protocol: TCP
            targetPort: 53
        externalTrafficPolicy: Local
        annotations: {}
      dns-udp:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: ""
        ports:
          dns-udp:
            enabled: true
            port: 53
            protocol: UDP
            targetPort: 53
        externalTrafficPolicy: Local
        annotations: {}

    # Probes configuration
    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false

    # blocky configuration - will translate to config.yml file inside the pod
    config: |
      upstream:
        default:
        - tcp+udp:8.8.8.8
        - tcp+udp:8.8.4.4
        - tcp+udp:1.1.1.1
        - tcp-tls:1.0.0.1:853
        - https://cloudflare-dns.com/dns-query
      # optional: custom IP address for domain name (with all sub-domains)
      # example: query "printer.lan" or "my.printer.lan" will return 192.168.178.3
      customDNS:
        mapping:
          blakeshome.com: 192.168.2.4

      # optional: definition, which DNS resolver should be used for queries to the domain (with all sub-domains).
      # Example: Query client.fritz.box will ask DNS server 192.168.178.1. This is necessary for local network, to resolve clients by host name
      # conditional:
      #   mapping:
      #     fritz.box: udp:192.168.178.1

      # optional: use black and white lists to block queries (for example ads, trackers, adult pages etc.)
      blocking:
        blackLists:
          ads:
          - https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
          - https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
          - http://sysctl.org/cameleon/hosts
          - https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt
          kids:
          - https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling-porn/hosts
          none:
        whiteLists:
          ads:
          - https://raw.githubusercontent.com/anudeepND/whitelist/master/domains/whitelist.txt
          - https://raw.githubusercontent.com/billimek/k8s-gitops/master/default/blocky/whitelist.txt
        # definition: which groups should be applied for which client
        clientGroupsBlock:
          # default will be used, if no special definition for a client name exists
          default:
            - ads
            # - special
          # use client name or ip address
          192.168.2.160: # ali_phone 
            - none 
          192.168.2.156: # ali_computer
            - none
          192.168.2.155: # luke_computer
            - ads
            - kids

      # optional: configuration for prometheus metrics endpoint
      prometheus:
        # enabled if true
        enable: false
        # url path, optional (default '/metrics')
        path: /metrics

      # optional: HTTP listener port, default 0 = no http listener. If > 0, will be used for prometheus metrics, pprof, ...
      httpPort: 4000
      # optional: Log level (one from debug, info, warn, error). Default: info
      logLevel: info
